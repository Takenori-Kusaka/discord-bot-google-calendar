name: Python CI/CD

on:
  push:
    branches:
      - main  # main ブランチへのプッシュ時に実行
  pull_request:
    branches:
      - main  # main ブランチへのプルリクエスト時に実行

jobs:
  build:
    runs-on: ubuntu-latest  # 最新の Ubuntu 環境で実行
    strategy:
      matrix:
        python-version: ["3.10"]  # 複数の Python バージョンでテスト

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached Poetry virtualenv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Check code formatting with Black
      run: |
        poetry run black --check .

    - name: Lint with Pylint
      run: |
        poetry run pylint app.py

    - name: Run tests with pytest
      run: |
        poetry run pytest

    - name: Set environment variables
      run: |
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> $GITHUB_ENV
        # echo "DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}" >> $GITHUB_ENV

    - name: Run application
      run: |
        poetry run python app.py
